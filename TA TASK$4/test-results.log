============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
ImportError while importing test module '/home/muhammad/Desktop/My Files/TA TASK$4/test_student.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
test_student.py:2: in <module>
    from a04 import mostTouchableLocker
E   ImportError: cannot import name 'mostTouchableLocker' from 'a04' (/home/muhammad/Desktop/My Files/TA TASK$4/a04.py)
=========================== short test summary info ============================
ERROR test_student.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
ImportError while importing test module '/home/muhammad/Desktop/My Files/TA TASK$4/test_student.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
test_student.py:2: in <module>
    from a04 import mostTouchableLocker
E   ImportError: cannot import name 'mostTouchableLocker' from 'a04' (/home/muhammad/Desktop/My Files/TA TASK$4/a04.py)
=========================== short test summary info ============================
ERROR test_student.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.08s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFFFFFFFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(0, 0)

test_student.py:23: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(0, 3)

test_student.py:26: AssertionError
_______________________________ test_openLocks_8 _______________________________

    def test_openLocks_8():
>       assert openLocks(1, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(1, 0)

test_student.py:30: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_openLocks_6 - assert 1 == 0
FAILED test_student.py::test_openLocks_7 - assert 1 == 0
FAILED test_student.py::test_openLocks_8 - assert 1 == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
============================== 13 failed in 0.07s ==============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 0 == 3
E        +  where 0 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 0 == 10
E        +  where 0 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 0 == 34
E        +  where 0 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 0 == 8
E        +  where 0 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 0 == 5228
E        +  where 0 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 0 == 3
FAILED test_student.py::test_openLocks_2 - assert 0 == 10
FAILED test_student.py::test_openLocks_3 - assert 0 == 34
FAILED test_student.py::test_openLocks_4 - assert 0 == 8
FAILED test_student.py::test_openLocks_5 - assert 0 == 5228
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 0.06s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 11 == 3
E        +  where 11 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 101 == 10
E        +  where 101 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 101 == 34
E        +  where 101 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 71 == 8
E        +  where 71 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 10001 == 5228
E        +  where 10001 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0

test_student.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 3

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
    
        open_locks = 0
    
        if number_of_students == 0:
    
            return 0
    
    
        elif number_of_students == 1:
    
            open_locks += 1
    
    
        for i in range(1, number_of_lockers + 1):
            x = i + 1
    
            for j in range(0, number_of_students):
    
                if i != j:
    
                    (open_locks)
    
                if i == j:
    
                    (open_locks + 1)
    
>       return (x)
E       UnboundLocalError: local variable 'x' referenced before assignment

a04.py:28: UnboundLocalError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 11 == 3
FAILED test_student.py::test_openLocks_2 - assert 101 == 10
FAILED test_student.py::test_openLocks_3 - assert 101 == 34
FAILED test_student.py::test_openLocks_4 - assert 71 == 8
FAILED test_student.py::test_openLocks_5 - assert 10001 == 5228
FAILED test_student.py::test_openLocks_7 - UnboundLocalError: local variable ...
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 0.60s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
../../../anaconda3/lib/python3.8/site-packages/_pytest/python.py:511: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
../../../anaconda3/lib/python3.8/site-packages/py/_path/local.py:704: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:991: in _find_and_load
    ???
<frozen importlib._bootstrap>:975: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:671: in _load_unlocked
    ???
../../../anaconda3/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:152: in exec_module
    exec(co, module.__dict__)
test_student.py:1: in <module>
    from a04 import openLocks
E     File "/home/muhammad/Desktop/My Files/TA TASK$4/a04.py", line 3
E       def openLocks(number_of_lockers , number_of_students): # almost STUCK 10%
E       ^
E   IndentationError: expected an indented block
=========================== short test summary info ============================
ERROR test_student.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.17s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 2 == 5228
E        +  where 2 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 2 == 5228
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFFFF.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0
E       assert None == 0
E        +  where None = openLocks(0, 0)

test_student.py:23: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_openLocks_6 - assert None == 0
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 12 failed, 1 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFFFF.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0
E       assert None == 0
E        +  where None = openLocks(0, 0)

test_student.py:23: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_openLocks_6 - assert None == 0
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 12 failed, 1 passed in 0.06s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.06s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 0 == 3
E        +  where 0 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 0 == 10
E        +  where 0 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 0 == 34
E        +  where 0 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 0 == 8
E        +  where 0 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 0 == 5228
E        +  where 0 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 0 == 3
FAILED test_student.py::test_openLocks_2 - assert 0 == 10
FAILED test_student.py::test_openLocks_3 - assert 0 == 34
FAILED test_student.py::test_openLocks_4 - assert 0 == 8
FAILED test_student.py::test_openLocks_5 - assert 0 == 5228
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.07s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.15s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFFFF.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0
E       AssertionError: assert '0' == 0
E        +  where '0' = openLocks(0, 0)

test_student.py:23: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       AssertionError: assert '0' == 0
E        +  where '0' = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_openLocks_6 - AssertionError: assert '0' == 0
FAILED test_student.py::test_openLocks_7 - AssertionError: assert '0' == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 12 failed, 1 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.13s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 4 == 10
E        +  where 4 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 6 == 20
E        +  where 6 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 12 == 72
E        +  where 12 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 9 == 60
E        +  where 9 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 9 == 96
E        +  where 9 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 4 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 6 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 12 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 9 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 9 == 96
========================= 10 failed, 3 passed in 0.06s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 4 == 10
E        +  where 4 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 6 == 20
E        +  where 6 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 12 == 72
E        +  where 12 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 9 == 60
E        +  where 9 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 9 == 96
E        +  where 9 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 4 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 6 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 12 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 9 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 9 == 96
========================= 10 failed, 3 passed in 0.09s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py .FF.FFFFFFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 9 == 10
E        +  where 9 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 9 == 34
E        +  where 9 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228

test_student.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 10000, number_of_students = 2

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
>                       if locker_number==True:
E                       Failed: Timeout >5.0s

a04.py:9: Failed
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0

test_student.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 0

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
                            z +=1
>       return z
E       UnboundLocalError: local variable 'z' referenced before assignment

a04.py:11: UnboundLocalError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0

test_student.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 3

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
                            z +=1
>       return z
E       UnboundLocalError: local variable 'z' referenced before assignment

a04.py:11: UnboundLocalError
_______________________________ test_openLocks_8 _______________________________

    def test_openLocks_8():
>       assert openLocks(1, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(1, 0)

test_student.py:30: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 4 == 10
E        +  where 4 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 6 == 20
E        +  where 6 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 12 == 72
E        +  where 12 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 9 == 60
E        +  where 9 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 9 == 96
E        +  where 9 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_2 - assert 9 == 10
FAILED test_student.py::test_openLocks_3 - assert 9 == 34
FAILED test_student.py::test_openLocks_5 - Failed: Timeout >5.0s
FAILED test_student.py::test_openLocks_6 - UnboundLocalError: local variable ...
FAILED test_student.py::test_openLocks_7 - UnboundLocalError: local variable ...
FAILED test_student.py::test_openLocks_8 - assert 1 == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 4 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 6 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 12 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 9 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 9 == 96
========================= 11 failed, 2 passed in 5.19s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py .FF.F.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 9 == 10
E        +  where 9 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 9 == 34
E        +  where 9 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228

test_student.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 10000, number_of_students = 2

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        if number_of_students == 0:
            return 0
        if number_of_students == 1:
            return number_of_lockers
        number_of_lockers
    
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
>                       if locker_number==True:
E                       Failed: Timeout >5.0s

a04.py:15: Failed
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0

test_student.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 3

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        if number_of_students == 0:
            return 0
        if number_of_students == 1:
            return number_of_lockers
        number_of_lockers
    
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
                            z +=1
>       return z
E       UnboundLocalError: local variable 'z' referenced before assignment

a04.py:17: UnboundLocalError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 4 == 10
E        +  where 4 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 6 == 20
E        +  where 6 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 12 == 72
E        +  where 12 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 9 == 60
E        +  where 9 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 9 == 96
E        +  where 9 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_2 - assert 9 == 10
FAILED test_student.py::test_openLocks_3 - assert 9 == 34
FAILED test_student.py::test_openLocks_5 - Failed: Timeout >5.0s
FAILED test_student.py::test_openLocks_7 - UnboundLocalError: local variable ...
FAILED test_student.py::test_mostTouchableLocker_1 - assert 4 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 6 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 12 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 9 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 9 == 96
========================= 9 failed, 4 passed in 5.09s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.F.FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 0 == 3
E        +  where 0 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 0 == 10
E        +  where 0 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 0 == 34
E        +  where 0 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 0 == 8
E        +  where 0 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 0 == 5228
E        +  where 0 = openLocks(10000, 1000)

test_student.py:20: AssertionError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0
E       assert None == 0
E        +  where None = openLocks(0, 3)

test_student.py:26: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 0 == 3
FAILED test_student.py::test_openLocks_2 - assert 0 == 10
FAILED test_student.py::test_openLocks_3 - assert 0 == 34
FAILED test_student.py::test_openLocks_4 - assert 0 == 8
FAILED test_student.py::test_openLocks_5 - assert 0 == 5228
FAILED test_student.py::test_openLocks_7 - assert None == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 0.10s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.10s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF...FFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 10 failed, 3 passed in 0.08s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py .FF.FFFFFFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 9 == 10
E        +  where 9 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 9 == 34
E        +  where 9 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228

test_student.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 10000, number_of_students = 2

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
    
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
>                           z +=1
E                           Failed: Timeout >5.0s

a04.py:11: Failed
_______________________________ test_openLocks_6 _______________________________

    def test_openLocks_6():
>       assert openLocks(0, 0) == 0

test_student.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 0

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
    
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
                            z +=1
>       return z
E       UnboundLocalError: local variable 'z' referenced before assignment

a04.py:12: UnboundLocalError
_______________________________ test_openLocks_7 _______________________________

    def test_openLocks_7():
>       assert openLocks(0, 3) == 0

test_student.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 0, number_of_students = 3

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
    
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
                            z +=1
>       return z
E       UnboundLocalError: local variable 'z' referenced before assignment

a04.py:12: UnboundLocalError
_______________________________ test_openLocks_8 _______________________________

    def test_openLocks_8():
>       assert openLocks(1, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(1, 0)

test_student.py:30: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_2 - assert 9 == 10
FAILED test_student.py::test_openLocks_3 - assert 9 == 34
FAILED test_student.py::test_openLocks_5 - Failed: Timeout >5.0s
FAILED test_student.py::test_openLocks_6 - UnboundLocalError: local variable ...
FAILED test_student.py::test_openLocks_7 - UnboundLocalError: local variable ...
FAILED test_student.py::test_openLocks_8 - assert 1 == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 11 failed, 2 passed in 5.10s =========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py .FF.F..FFFFFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 9 == 10
E        +  where 9 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 9 == 34
E        +  where 9 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228

test_student.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 10000, number_of_students = 2

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
    
        if number_of_lockers == 0:
            return(0)
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
                    for locker_number in lockers:
                        if locker_number==True:
>                           z +=1
E                           Failed: Timeout >5.0s

a04.py:13: Failed
_______________________________ test_openLocks_8 _______________________________

    def test_openLocks_8():
>       assert openLocks(1, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(1, 0)

test_student.py:30: AssertionError
__________________________ test_mostTouchableLocker_1 __________________________

    def test_mostTouchableLocker_1():
>       assert mostTouchableLocker(10, 10) == 10
E       assert 1 == 10
E        +  where 1 = mostTouchableLocker(10, 10)

test_student.py:34: AssertionError
__________________________ test_mostTouchableLocker_2 __________________________

    def test_mostTouchableLocker_2():
>       assert mostTouchableLocker(20, 10) == 20
E       assert 1 == 20
E        +  where 1 = mostTouchableLocker(20, 10)

test_student.py:37: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 1 == 72
E        +  where 1 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 1 == 60
E        +  where 1 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 1 == 96
E        +  where 1 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_2 - assert 9 == 10
FAILED test_student.py::test_openLocks_3 - assert 9 == 34
FAILED test_student.py::test_openLocks_5 - Failed: Timeout >5.0s
FAILED test_student.py::test_openLocks_8 - assert 1 == 0
FAILED test_student.py::test_mostTouchableLocker_1 - assert 1 == 10
FAILED test_student.py::test_mostTouchableLocker_2 - assert 1 == 20
FAILED test_student.py::test_mostTouchableLocker_3 - assert 1 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 1 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 1 == 96
========================= 9 failed, 4 passed in 5.14s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py .FF.F..F..FFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 9 == 10
E        +  where 9 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 9 == 34
E        +  where 9 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228

test_student.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

number_of_lockers = 10000, number_of_students = 2

    def openLocks(number_of_lockers , number_of_students):### YOUR CODE FOR openLocks() FUNCTION GOES HERE ###
        if number_of_lockers == 0:
            return(0)
        lockers = [0] * number_of_lockers
        for number_of_students in range(1 , number_of_lockers + 1):
            z = 0
            for locker_number in range(0, number_of_lockers):
                if locker_number % number_of_students == 0:
                    lockers[locker_number] = not lockers[locker_number]
>                   for locker_number in lockers:
E                   Failed: Timeout >5.0s

a04.py:10: Failed
_______________________________ test_openLocks_8 _______________________________

    def test_openLocks_8():
>       assert openLocks(1, 0) == 0
E       assert 1 == 0
E        +  where 1 = openLocks(1, 0)

test_student.py:30: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 0 == 72
E        +  where 0 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 70 == 60
E        +  where 70 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 100 == 96
E        +  where 100 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_2 - assert 9 == 10
FAILED test_student.py::test_openLocks_3 - assert 9 == 34
FAILED test_student.py::test_openLocks_5 - Failed: Timeout >5.0s
FAILED test_student.py::test_openLocks_8 - assert 1 == 0
FAILED test_student.py::test_mostTouchableLocker_3 - assert 0 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 70 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 100 == 96
========================= 7 failed, 6 passed in 5.07s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.....FFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 0 == 72
E        +  where 0 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 70 == 60
E        +  where 70 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 100 == 96
E        +  where 100 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_3 - assert 0 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 70 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 100 == 96
========================= 8 failed, 5 passed in 0.08s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.....FFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 0 == 72
E        +  where 0 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 70 == 60
E        +  where 70 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 100 == 96
E        +  where 100 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_3 - assert 0 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 70 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 100 == 96
========================= 8 failed, 5 passed in 0.06s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Desktop/My Files/TA TASK$4
plugins: timeout-1.4.2
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 13 items

test_student.py FFFFF.....FFF                                            [100%]

=================================== FAILURES ===================================
_______________________________ test_openLocks_1 _______________________________

    def test_openLocks_1():
>       assert openLocks(10, 10) == 3
E       assert 1 == 3
E        +  where 1 = openLocks(10, 10)

test_student.py:8: AssertionError
_______________________________ test_openLocks_2 _______________________________

    def test_openLocks_2():
>       assert openLocks(100, 100) == 10
E       assert 1 == 10
E        +  where 1 = openLocks(100, 100)

test_student.py:11: AssertionError
_______________________________ test_openLocks_3 _______________________________

    def test_openLocks_3():
>       assert openLocks(100, 72) == 34
E       assert 1 == 34
E        +  where 1 = openLocks(100, 72)

test_student.py:14: AssertionError
_______________________________ test_openLocks_4 _______________________________

    def test_openLocks_4():
>       assert openLocks(70, 100) == 8
E       assert 1 == 8
E        +  where 1 = openLocks(70, 100)

test_student.py:17: AssertionError
_______________________________ test_openLocks_5 _______________________________

    def test_openLocks_5():
>       assert openLocks(10000, 1000) == 5228
E       assert 1 == 5228
E        +  where 1 = openLocks(10000, 1000)

test_student.py:20: AssertionError
__________________________ test_mostTouchableLocker_3 __________________________

    def test_mostTouchableLocker_3():
>       assert mostTouchableLocker(72, 100) == 72
E       assert 0 == 72
E        +  where 0 = mostTouchableLocker(72, 100)

test_student.py:40: AssertionError
__________________________ test_mostTouchableLocker_4 __________________________

    def test_mostTouchableLocker_4():
>       assert mostTouchableLocker(100, 70) == 60
E       assert 70 == 60
E        +  where 70 = mostTouchableLocker(100, 70)

test_student.py:43: AssertionError
__________________________ test_mostTouchableLocker_5 __________________________

    def test_mostTouchableLocker_5():
>       assert mostTouchableLocker(100, 100) == 96
E       assert 100 == 96
E        +  where 100 = mostTouchableLocker(100, 100)

test_student.py:46: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_openLocks_1 - assert 1 == 3
FAILED test_student.py::test_openLocks_2 - assert 1 == 10
FAILED test_student.py::test_openLocks_3 - assert 1 == 34
FAILED test_student.py::test_openLocks_4 - assert 1 == 8
FAILED test_student.py::test_openLocks_5 - assert 1 == 5228
FAILED test_student.py::test_mostTouchableLocker_3 - assert 0 == 72
FAILED test_student.py::test_mostTouchableLocker_4 - assert 70 == 60
FAILED test_student.py::test_mostTouchableLocker_5 - assert 100 == 96
========================= 8 failed, 5 passed in 0.07s ==========================
