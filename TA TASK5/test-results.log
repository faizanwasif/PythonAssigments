============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_1 __________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:66: TypeError
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:69: TypeError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:72: TypeError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:75: TypeError
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:78: TypeError
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:81: TypeError
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:84: TypeError
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 0 positional arguments but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 0 positional arguments but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 0 positional arguments but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_1 - TypeError: get_companies...
FAILED test_student.py::test_get_companies_names_2 - TypeError: get_companies...
FAILED test_student.py::test_get_companies_names_3 - TypeError: get_companies...
FAILED test_student.py::test_get_countries_1 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_2 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_3 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_4 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
============================== 10 failed in 0.13s ==============================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_1 _________________________________________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['Company Name'] == ['Roshan', 'G...hqiperia Com']
E         At index 0 diff: 'Company Name' != 'Roshan'
E         Right contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:66: AssertionError
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Company Name'] == []
E         Left contains one more item: 'Company Name'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Company Name'] == ['Roshan']
E         At index 0 diff: 'Company Name' != 'Roshan'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert ['Country'] == {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert ['Country'] == {}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert ['Country'] == {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_countries_4 ____________________________________________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
E         Use -v to get the full diff

test_student.py:84: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['City'] == ['Gjirafa', 'Shqiperia Com']
E         At index 0 diff: 'City' != 'Gjirafa'
E         Right contains one more item: 'Shqiperia Com'
E         Use -v to get the full diff

test_student.py:88: AssertionError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       AssertionError: assert ['City'] == ['Roshan']
E         At index 0 diff: 'City' != 'Roshan'
E         Use -v to get the full diff

test_student.py:92: AssertionError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       AssertionError: assert ['City'] == None
E        +  where ['City'] = get_companies([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}], {'city': 'Peshawar', 'country': 'Pakistan'})

test_student.py:96: AssertionError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert ['Company Name'] == ['Roshan', 'G...hqiperia Com']
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Company Name'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Company Name'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert ['Country'] == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert ['Country'] == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert ['Country'] == {'Albania': 1}
FAILED test_student.py::test_get_countries_4 - AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
FAILED test_student.py::test_get_companies_1 - AssertionError: assert ['City'] == ['Gjirafa', 'Shqiperia Com']
FAILED test_student.py::test_get_companies_2 - AssertionError: assert ['City'] == ['Roshan']
FAILED test_student.py::test_get_companies_3 - AssertionError: assert ['City'] == None
============================================================= 10 failed in 0.09s =============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
../../../anaconda3/lib/python3.8/site-packages/_pytest/python.py:511: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
../../../anaconda3/lib/python3.8/site-packages/py/_path/local.py:704: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:991: in _find_and_load
    ???
<frozen importlib._bootstrap>:975: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:671: in _load_unlocked
    ???
../../../anaconda3/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:152: in exec_module
    exec(co, module.__dict__)
test_student.py:2: in <module>
    from a05 import get_companies_names
E     File "/home/muhammad/Documents/My Files/TA TASK5/a05.py", line 11
E       def get_countries(companyList[0]):# Your code for get_countries goes here
E                                    ^
E   SyntaxError: invalid syntax
========================================================== short test summary info ===========================================================
ERROR test_student.py
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.20s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_1 _________________________________________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['Company Name'] == ['Roshan', 'G...hqiperia Com']
E         At index 0 diff: 'Company Name' != 'Roshan'
E         Right contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:66: AssertionError
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Company Name'] == []
E         Left contains one more item: 'Company Name'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Company Name'] == ['Roshan']
E         At index 0 diff: 'Company Name' != 'Roshan'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert ['Country'] == {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert ['Country'] == {}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert ['Country'] == {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_countries_4 ____________________________________________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
E         Use -v to get the full diff

test_student.py:84: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert ['Company Name'] == ['Roshan', 'G...hqiperia Com']
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Company Name'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Company Name'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert ['Country'] == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert ['Country'] == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert ['Country'] == {'Albania': 1}
FAILED test_student.py::test_get_countries_4 - AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
============================================================= 10 failed in 0.07s =============================================================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:8: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
=========================== short test summary info ============================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.13s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:8: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   IndexError: list index out of range
=========================== short test summary info ============================
ERROR test_student.py - IndexError: list index out of range
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.13s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:8: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
=========================== short test summary info ============================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:60: in <module>
    get_companies_names(companyList)
a05.py:3: in get_companies_names
    for value in lst:
E   NameError: name 'lst' is not defined
=========================== short test summary info ============================
ERROR test_student.py - NameError: name 'lst' is not defined
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.07s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_1 __________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ('Roshan', 'G...hqiperia Com') == ['Roshan', 'G...hqiperia Com']
E         Use -v to get the full diff

test_student.py:66: AssertionError
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ('Roshan', 'G...hqiperia Com') == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ('Roshan', 'G...hqiperia Com') == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert ['Country'] == {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:75: AssertionError
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert ['Country'] == {}
E         Use -v to get the full diff

test_student.py:78: AssertionError
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert ['Country'] == {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
E         Use -v to get the full diff

test_student.py:84: AssertionError
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert (...
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert (...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert (...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_2 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_3 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
============================== 10 failed in 0.16s ==============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert ['Country'] == {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:75: AssertionError
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert ['Country'] == {}
E         Use -v to get the full diff

test_student.py:78: AssertionError
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert ['Country'] == {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert ['Country'] == {'Afghanistan... 'Albania': 2}
E         Use -v to get the full diff

test_student.py:84: AssertionError
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_2 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_3 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert ['Count...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.09s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:75: TypeError
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:78: TypeError
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:81: TypeError
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       TypeError: get_countries() takes 0 positional arguments but 1 was given

test_student.py:84: TypeError
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_2 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_3 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_countries_4 - TypeError: get_countries() tak...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.08s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       assert None == []
E        +  where None = get_companies_names([])

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - assert None == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.07s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       assert None == []
E        +  where None = get_companies_names([])

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - assert None == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.09s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.07s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_1 __________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:66: TypeError
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:69: TypeError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:72: TypeError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_1 - TypeError: get_companies...
FAILED test_student.py::test_get_companies_names_2 - TypeError: get_companies...
FAILED test_student.py::test_get_companies_names_3 - TypeError: get_companies...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
============================== 10 failed in 0.10s ==============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
========================= 9 failed, 1 passed in 0.06s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:64: in <module>
    get_companies_names(company)
E   NameError: name 'company' is not defined
=========================== short test summary info ============================
ERROR test_student.py - NameError: name 'company' is not defined
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.14s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_1 __________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan', 'G...hqiperia Com']
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:66: AssertionError
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 6 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...ria Com', ...] == ['Roshan']
E         Left contains 6 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
============================== 10 failed in 0.09s ==============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFFFFFF                                               [100%]

=================================== FAILURES ===================================
__________________________ test_get_companies_names_1 __________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan', 'G...hqiperia Com']
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:66: AssertionError
__________________________ test_get_companies_names_2 __________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 6 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
__________________________ test_get_companies_names_3 __________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...ria Com', ...] == ['Roshan']
E         Left contains 6 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
_____________________________ test_get_countries_1 _____________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_2 _____________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_3 _____________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_countries_4 _____________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
----------------------------- Captured stdout call -----------------------------
{'Afghanistan': 1, 'Albania': 2}
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert [...
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert [...
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None ==...
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None ==...
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() tak...
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() tak...
============================== 10 failed in 0.07s ==============================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFFFFFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert None == {'Afghanistan': 1}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:75: AssertionError
------------------------------------------------------------ Captured stdout call ------------------------------------------------------------
{'Afghanistan': 1, 'Albania': 2}
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       assert None == {}
E        +  where None = get_countries([])

test_student.py:78: AssertionError
------------------------------------------------------------ Captured stdout call ------------------------------------------------------------
{'Afghanistan': 1, 'Albania': 2}
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert None == {'Albania': 1}
E        +  where None = get_countries([{'City': 'Tirana', 'Company Motto': 'Gjirafa is a video content and e-commerce platform for the Balkans built on top ...', 'Contact': {'Email': 'info@gjirafa.com', 'Phone Number': '37744991206', 'Website': 'http://www.gjirafa.com/'}, ...}])

test_student.py:81: AssertionError
------------------------------------------------------------ Captured stdout call ------------------------------------------------------------
{'Afghanistan': 1, 'Albania': 2}
____________________________________________________________ test_get_countries_4 ____________________________________________________________

    def test_get_countries_4():
>       assert get_countries(companyList) == {'Afghanistan': 1, 'Albania': 2}
E       AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
E        +  where None = get_countries([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}])

test_student.py:84: AssertionError
------------------------------------------------------------ Captured stdout call ------------------------------------------------------------
{'Afghanistan': 1, 'Albania': 2}
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert None == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - assert None == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert None == {'Albania': 1}
FAILED test_student.py::test_get_countries_4 - AssertionError: assert None == {'Afghanistan': 1, 'Albania': 2}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 9 failed, 1 passed in 0.24s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 8 failed, 2 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:13: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.12s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:13: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.07s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:13: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.07s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:13: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.07s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 8 failed, 2 passed in 0.09s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:62: in <module>
    get_companies_names(companyList)
a05.py:54: in get_companies_names
    for names in lst:
E   NameError: name 'lst' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'lst' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.07s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_1 _________________________________________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan', 'G...hqiperia Com']
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:66: AssertionError
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 6 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...ria Com', ...] == ['Roshan']
E         Left contains 6 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_1 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan', 'G...hqiperia Com']
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...ria Com', ...] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 9 failed, 1 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .FFFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
E         Left contains 3 more items, first extra item: 'Roshan'
E         Use -v to get the full diff

test_student.py:69: AssertionError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_2 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == []
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 8 failed, 2 passed in 0.09s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py FFFFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_1 _________________________________________________________

    def test_get_companies_names_1():
>       assert get_companies_names(companyList) == ['Roshan', 'Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:66: TypeError
_________________________________________________________ test_get_companies_names_2 _________________________________________________________

    def test_get_companies_names_2():
>       assert get_companies_names([]) == []
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:69: TypeError
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       TypeError: get_companies_names() takes 0 positional arguments but 1 was given

test_student.py:72: TypeError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_1 - TypeError: get_companies_names() takes 0 positional arguments but 1 was given
FAILED test_student.py::test_get_companies_names_2 - TypeError: get_companies_names() takes 0 positional arguments but 1 was given
FAILED test_student.py::test_get_companies_names_3 - TypeError: get_companies_names() takes 0 positional arguments but 1 was given
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 9 failed, 1 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.08s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
../../../anaconda3/lib/python3.8/site-packages/_pytest/python.py:511: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
../../../anaconda3/lib/python3.8/site-packages/py/_path/local.py:704: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:991: in _find_and_load
    ???
<frozen importlib._bootstrap>:975: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:671: in _load_unlocked
    ???
../../../anaconda3/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:152: in exec_module
    exec(co, module.__dict__)
test_student.py:2: in <module>
    from a05 import get_companies_names
E     File "/home/muhammad/Documents/My Files/TA TASK5/a05.py", line 55
E       if companyList == []:
E       ^
E   IndentationError: unexpected indent
========================================================== short test summary info ===========================================================
ERROR test_student.py
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.17s ==============================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.08s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..FFFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert 'Roshan' == ['Roshan']
E        +  where 'Roshan' = get_companies_names([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert 'Roshan' == ['Roshan']
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 7 failed, 3 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ...FFF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_1 ____________________________________________________________

    def test_get_countries_1():
>       assert get_countries([companyList[0]]) == {'Afghanistan': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
E         Omitting 1 identical items, use -vv to show
E         Left contains 1 more item:
E         {'Albania': 2}
E         Use -v to get the full diff

test_student.py:75: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
E         Differing items:
E         {'Albania': 2} != {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_1 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Afghanistan': 1}
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 6 failed, 4 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.05s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..F.FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 6 failed, 4 passed in 0.07s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..F.FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
E         Left contains 2 more items, first extra item: 'Gjirafa'
E         Use -v to get the full diff

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert ['Roshan', 'G...hqiperia Com'] == ['Roshan']
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 6 failed, 4 passed in 0.08s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....FF.FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

companyList = []

    def get_countries(companyList):# Your code for get_countries goes here
    
        count = 1
        count2 = 1
        count3 = 1
    
>       if companyList == [companyList[0]]:
E       IndexError: list index out of range

a05.py:79: IndexError
____________________________________________________________ test_get_countries_3 ____________________________________________________________

    def test_get_countries_3():
>       assert get_countries([companyList[1]]) == {'Albania': 1}
E       AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
E         Left contains 1 more item:
E         {'Afghanistan': 1}
E         Right contains 1 more item:
E         {'Albania': 1}
E         Use -v to get the full diff

test_student.py:81: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - IndexError: list index out of range
FAILED test_student.py::test_get_countries_3 - AssertionError: assert {'Afghanistan': 1} == {'Albania': 1}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.06s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....F..FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 4 failed, 6 passed in 0.09s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..F.F..FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
_________________________________________________________ test_get_companies_names_3 _________________________________________________________

    def test_get_companies_names_3():
>       assert get_companies_names([companyList[0]]) == ['Roshan']
E       AssertionError: assert 'Roshan' == ['Roshan']
E        +  where 'Roshan' = get_companies_names([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...Contact': {'Email': 'roshanca@roshan.af', 'Phone Number': '+93 79 997 1333', 'Website': 'http://www.roshan.af/'}, ...}])

test_student.py:72: AssertionError
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_names_3 - AssertionError: assert 'Roshan' == ['Roshan']
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 5 failed, 5 passed in 0.05s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ....F..FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_countries_2 ____________________________________________________________

    def test_get_countries_2():
>       assert get_countries([]) == {}
E       AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
E         Left contains 2 more items:
E         {'Afghanistan': 1, 'Albania': 2}
E         Use -v to get the full diff

test_student.py:78: AssertionError
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_countries_2 - AssertionError: assert {'Afghanistan... 'Albania': 2} == {}
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 4 failed, 6 passed in 0.09s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .......FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 3 failed, 7 passed in 0.09s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .......FFF                                                                                                             [100%]

================================================================== FAILURES ==================================================================
____________________________________________________________ test_get_companies_1 ____________________________________________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:88: TypeError
____________________________________________________________ test_get_companies_2 ____________________________________________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:92: TypeError
____________________________________________________________ test_get_companies_3 ____________________________________________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       TypeError: get_companies() takes 1 positional argument but 2 were given

test_student.py:96: TypeError
========================================================== short test summary info ===========================================================
FAILED test_student.py::test_get_companies_1 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_2 - TypeError: get_companies() takes 1 positional argument but 2 were given
FAILED test_student.py::test_get_companies_3 - TypeError: get_companies() takes 1 positional argument but 2 were given
======================================================== 3 failed, 7 passed in 0.05s =========================================================
============================================================ test session starts =============================================================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

=================================================================== ERRORS ===================================================================
______________________________________________________ ERROR collecting test_student.py ______________________________________________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:27: in <module>
    x,y,z = companyList[0] , companyList[1], companyList[2]
E   NameError: name 'companyList' is not defined
========================================================== short test summary info ===========================================================
ERROR test_student.py - NameError: name 'companyList' is not defined
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
============================================================== 1 error in 0.06s ==============================================================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .......FFF                                               [100%]

=================================== FAILURES ===================================
_____________________________ test_get_companies_1 _____________________________

    def test_get_companies_1():
        location = {'city': 'Tirana', 'country': 'Albania'}
>       assert get_companies(companyList, location) == ['Gjirafa', 'Shqiperia Com']
E       AssertionError: assert {'Afghanistan...ia': 'Tirana'} == ['Gjirafa', 'Shqiperia Com']
E         Use -v to get the full diff

test_student.py:88: AssertionError
_____________________________ test_get_companies_2 _____________________________

    def test_get_companies_2():
        location = {'city': 'Kabul', 'country': 'Afghanistan'}
>       assert get_companies(companyList, location) == ['Roshan']
E       AssertionError: assert {'Afghanistan...ia': 'Tirana'} == ['Roshan']
E         Use -v to get the full diff

test_student.py:92: AssertionError
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       AssertionError: assert {'Afghanistan': 'Kabul', 'Albania': 'Tirana'} == None
E        +  where {'Afghanistan': 'Kabul', 'Albania': 'Tirana'} = get_companies([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}], {'city': 'Peshawar', 'country': 'Pakistan'})

test_student.py:96: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_1 - AssertionError: assert {'Afgha...
FAILED test_student.py::test_get_companies_2 - AssertionError: assert {'Afgha...
FAILED test_student.py::test_get_companies_3 - AssertionError: assert {'Afgha...
========================= 3 failed, 7 passed in 0.10s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 0 items / 1 error

==================================== ERRORS ====================================
_______________________ ERROR collecting test_student.py _______________________
test_student.py:2: in <module>
    from a05 import get_companies_names
a05.py:155: in <module>
    get_companies(companyList , location)
E   NameError: name 'location' is not defined
=========================== short test summary info ============================
ERROR test_student.py - NameError: name 'location' is not defined
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
=============================== 1 error in 0.20s ===============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py .........F                                               [100%]

=================================== FAILURES ===================================
_____________________________ test_get_companies_3 _____________________________

    def test_get_companies_3():
        location = {'city': 'Peshawar', 'country': 'Pakistan'}
>       assert get_companies(companyList, location) == None
E       AssertionError: assert [None] == None
E        +  where [None] = get_companies([{'City': 'Kabul', 'Company Motto': 'Roshan began operations in 2003 in an environment where there was virtually no te...act': {'Email': 'mandi@shqiperia.com', 'Phone Number': '35542403910', 'Website': 'http://www.shqiperiacom.info'}, ...}], {'city': 'Peshawar', 'country': 'Pakistan'})

test_student.py:96: AssertionError
=========================== short test summary info ============================
FAILED test_student.py::test_get_companies_3 - AssertionError: assert [None] ...
========================= 1 failed, 9 passed in 0.09s ==========================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..........                                               [100%]

============================== 10 passed in 0.09s ==============================
============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.9.0, pluggy-0.13.1
rootdir: /home/muhammad/Documents/My Files/TA TASK5
plugins: timeout-1.4.2
timeout: 3.0s
timeout method: signal
timeout func_only: False
collected 10 items

test_student.py ..........                                               [100%]

============================== 10 passed in 0.02s ==============================
